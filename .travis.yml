sudo: required

services:
  - docker

env:
  global:
    - ALEPH_DATABASE_NAME=aleph
    - ALEPH_DATABASE_URI=postgresql://localhost/$ALEPH_DATABASE_NAME
    - DOCKER_COMPOSE_VERSION=1.16.1
    - DOCKER_IMAGE_NAME=alephdata/aleph

before_install:
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - sudo sysctl -w vm.max_map_count=262144
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - sudo echo "ALEPH_DATABASE_NAME=$ALEPH_DATABASE_NAME\nALEPH_DATABASE_URI=$ALEPH_DATABASE_URI\nOAUTH_KEY=$OAUTH_KEY\nOAUTH_SECRET=$OAUTH_SECRET" >> aleph.env
  - docker --version
  - docker-compose --version
  - docker pull alephdata/aleph:latest

install:
  - echo "${TRAVIS_BRANCH}"
  - docker build --cache-from alephdata/aleph:latest -t alephdata/aleph:latest .
  - docker build --cache-from alephdata/ui:latest -t alephdata/ui:latest ui
  - docker build --cache-from alephdata/aleph-convert-document:latest -t alephdata/aleph-convert-document:latest services/convert-document
  - docker-compose -f docker-compose.test.yml up -d postgres elasticsearch
  - sleep 4

script:
  - docker-compose -f docker-compose.test.yml run --rm app /aleph/contrib/devwrapper.sh /aleph/contrib/test.sh

after_success:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  # push tag as well
  - if [[ $TRAVIS_TAG = $TRAVIS_BRANCH ]]; then
      docker build -t alephdata/aleph-extract-polyglot:latest services/extract-polyglot
      docker build -t alephdata/aleph-extract-spacy:latest services/extract-spacy
      docker tag alephdata/aleph-convert-document:latest alephdata/aleph-convert-document:$TRAVIS_TAG ;
      docker push alephdata/aleph-convert-document:latest ;
      docker push alephdata/aleph-convert-document:$TRAVIS_TAG ;
      docker tag alephdata/aleph-extract-polyglot:latest alephdata/aleph-extract-polyglot:$TRAVIS_TAG ;
      docker push alephdata/aleph-extract-polyglot:latest ;
      docker push alephdata/aleph-extract-polyglot:$TRAVIS_TAG ;
      docker tag alephdata/aleph-extract-spacy:latest alephdata/aleph-extract-spacy:$TRAVIS_TAG ;
      docker push alephdata/aleph-extract-spacy:latest ;
      docker push alephdata/aleph-extract-spacy:$TRAVIS_TAG ;
      docker tag alephdata/aleph:latest alephdata/aleph:$TRAVIS_TAG ;
      docker push alephdata/aleph:latest ;
      docker push alephdata/aleph:$TRAVIS_TAG ;
      docker tag alephdata/ui:latest alephdata/ui:$TRAVIS_TAG ;
      docker push alephdata/ui:latest ;
      docker push alephdata/ui:$TRAVIS_TAG ;
    fi
  - if [[ $TRAVIS_BRANCH = "occrp/production" ]]; then
      docker build -t alephdata/aleph-extract-polyglot:latest services/extract-polyglot
      docker build -t alephdata/aleph-extract-spacy:latest services/extract-spacy
      docker tag alephdata/aleph-convert-document:latest alephdata/aleph-convert-document:occrp ;
      docker push alephdata/aleph-convert-document:occrp ;
      docker tag alephdata/aleph-extract-polyglot:latest alephdata/aleph-extract-polyglot:occrp ;
      docker push alephdata/aleph-extract-polyglot:occrp ;
      docker tag alephdata/aleph-extract-spacy:latest alephdata/aleph-extract-spacy:occrp ;
      docker push alephdata/aleph-extract-spacy:occrp ;
      docker tag alephdata/aleph:latest alephdata/aleph:occrp ;
      docker push alephdata/aleph:occrp ;
      docker tag alephdata/ui:latest alephdata/ui:occrp ;
      docker push alephdata/ui:occrp ;
    fi
