version: "3.2"

services:
  postgres:
    image: postgres:10.0
    ports:
      - "15432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: alephdata/platform-elasticsearch:2.1.4
    restart: on-failure
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq
    hostname: queue
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  convert-document:
    image: alephdata/aleph-convert-document
    restart: on-failure
    tmpfs:
      - /tmp
      - /root/.config
    expose:
      - 3000

  extract-entities:
    image: alephdata/aleph-extract-entities
    restart: on-failure
    expose:
      - 50000

  extract-countries:
    image: alephdata/aleph-extract-countries
    restart: on-failure
    expose:
      - 50000

  recognize-text:
    image: alephdata/aleph-recognize-text
    restart: on-failure
    expose:
      - 50000

  app:
    image: alephdata/aleph
    command: /bin/bash
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - convert-document
      - extract-entities
      - extract-countries
      - recognize-text
    tmpfs: /tmp
    volumes:
      - archive-data:/data
      - "./:/aleph"
      - "./mappings:/aleph/mappings"
      - "/:/host"
    environment:
      ALEPH_DEBUG: 'true'
      ALEPH_SECRET_KEY: 'development'
      ALEPH_OAUTH: 'false'
      ALEPH_ARCHIVE_TYPE: 'file'
    env_file:
      - aleph.env

  api:
    image: alephdata/aleph
    command: python3 aleph/manage.py runserver -h 0.0.0.0 -p 5000
    expose:
      - 5000
    ports:
      - "5000:5000"
    restart: on-failure
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - convert-document
      - extract-entities
      - extract-countries
      - recognize-text
    tmpfs: /tmp
    volumes:
      - archive-data:/data
      - "./aleph:/aleph/aleph"
      - "/:/host"
    environment:
      ALEPH_DEBUG: 'true'
      ALEPH_SECRET_KEY: 'development'
      ALEPH_ARCHIVE_TYPE: 'file'
    env_file:
      - aleph.env
  
  ui:
    image: alephdata/aleph-ui
    links:
      - api
    command: npm run start
    ports:
      - "8080:3000"
    volumes:
      - "./ui/src:/alephui/src"
      - "./ui/public:/alephui/public"
      - "./ui/.tx:/alephui/.tx"
      - "./ui/package.json:/alephui/package.json"
    environment:
      REACT_APP_API_ENDPOINT: '/api/2'
    env_file:
      - aleph.env

volumes:
  archive-data: {}
  elasticsearch-data: {}
  postgres-data: {}
  rabbitmq-data: {}